// Configuração do Prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum para tipos de usuário
enum UserRole {
  MORADOR
  ADMIN_PORTEIRO
  ADMIN_SINDICO
}

// Enum para status de usuário
enum UserStatus {
  ATIVO
  INATIVO
  PENDENTE
}

// Tabela de Usuários
model User {
  id          String     @id @default(cuid())
  email       String     @unique
  password    String
  name        String
  phone       String?
  cpf         String?    @unique
  role        UserRole   @default(MORADOR)
  status      UserStatus @default(PENDENTE)
  avatar      String?
  
  // Relacionamentos
  units       UserUnit[] // Relacionamento com unidades
  
  // Timestamps
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  @@map("users")
}

// Tabela de Unidades (Apartamentos/Casas)
model Unit {
  id          String     @id @default(cuid())
  number      String     // Ex: "101", "A-201"
  block       String?    // Ex: "Bloco A", "Torre 1"
  floor       Int?       // Andar
  bedrooms    Int?       // Quartos
  area        Float?     // Área em m²
  
  // Status
  isOccupied  Boolean    @default(false)
  
  // Relacionamentos
  residents   UserUnit[] // Moradores da unidade
  
  // Timestamps
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  @@unique([number, block]) // Combinação única
  @@map("units")
}

// Tabela de relacionamento Usuário-Unidade (N:N)
model UserUnit {
  id        String   @id @default(cuid())
  userId    String
  unitId    String
  
  // Tipo de relacionamento
  isOwner   Boolean  @default(false) // Proprietário ou inquilino
  isActive  Boolean  @default(true)  // Relacionamento ativo
  
  // Relacionamentos
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  unit      Unit     @relation(fields: [unitId], references: [id], onDelete: Cascade)
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([userId, unitId])
  @@map("user_units")
}

// Índices para performance
// @@index([email])
// @@index([cpf])
// @@index([role])
// @@index([status])